apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-microservice-discovery
  labels: 
    env: test
    type: discovery-service
spec:
  replicas: 2
  selector:
    matchLabels:
      env: test  
      type: discovery-service
  template:
    metadata:
      labels: 
         env: test
         type: discovery-service
    spec:
      volumes:
        - name: config
          configmap: 
            name: microservice-config-map
      containers:
        - name:  microservice-discovery
          image: montud/microservice-discovery:latest
          env:
            - name:  server.port
              valueFrom:
                configMapKeyRef:
                  name: microservice-config-map
                  key: server.port

            - name:  eureka.instance.hostname
              valueFrom:
                configMapKeyRef:
                  name: microservice-config-map
                  key:  eureka.instance.hostname

            - name:  eureka.client.fetch-registry
              valueFrom:
                configMapKeyRef:
                  name: microservice-config-map
                  key:  eureka.client.fetch-registry

            - name:  eureka.client.register-with-eureka
              valueFrom:
                configMapKeyRef:
                  name: microservice-config-map
                  key: eureka.client.register-with-eureka
 
            - name:  spring.application.name
              valueFrom:
                configMapKeyRef:
                  name: microservice-config-map
                  key: spring.application.name


          volumeMounts:
           - name: config
             mountPath: "/config"
             readOnly: true


          ports:
            - containerPort: 8761

---

apiVersion: v1 
kind: Service
metadata:
  name: microservice-discovery
  labels:
    service:  microservice-discovery
spec:
  type: NodePort
  selector:
      env: test  
      type: discovery-service
  ports:
    - nodePort: 30876
      targetPort: 8761
      port: 8761

---
apiVersion: v1 
kind: ConfigMap
metadata:
  name: microservice-config-map
  labels:
     type: configmap
data:
  server.port: "8761"
  eureka.instance.hostname: "localhost"
  eureka.client.fetch-registry: "false"
  eureka.client.register-with-eureka: "false"
  spring.application.name: "servicediscovery"




